---

- name: Uninstall old versions of Docker
  apt:
    name: "{{ item }}"
    state: absent
  with_items:
    - docker
    - docker-engine
    - docker.io

- name: debian | installing pre-reqs
  apt:
    name: "{{ item }}"
    state: present
  become: true
  with_items:
    - 'apt-transport-https'
    - 'ca-certificates'
    - 'software-properties-common'



- name: Ensure the system can use the HTTPS transport for APT
  stat:
    path: /usr/lib/apt/methods/https
  register: apt_https_transport

- name: Import docker GPG key to apt
  apt_key:
    url: "{{ docker_apt_key_url }}"
    state: present

- name: Add docker repository
  apt_repository:
    repo: 'deb {{ docker_apt_repository_url }}/{{ docker_distribution }} {{ docker_distribution_release }} stable'
    state: present

- name: Install docker
  apt:
    pkg: "{{ docker_package }}={{ docker_debian_version }}"
    state: present

- name: Create docker.service.d directory
  file:
    path: "{{ docker_override_path }}"
    state: directory
  when: docker_override_options

- name: Configure docker
  template:
    src: service_override.conf
    dest: "{{ docker_override_path }}/override.conf"
    owner: root
    mode: 0644
  when: docker_override_options
  notify:
    - reload systemd
    - restart docker


- name: Clean artifact path
  file:
    state: absent
    path: "/usr/local/bin/docker-compose"

#- name: install docker compose
#  become: yes
#  shell: 'curl -L https://github.com/docker/compose/releases/download/1.22.0/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose &&
#  chmod +x /usr/local/bin/docker-compose'



- name: Install Docker Compose (if configured).
  get_url:
    url: https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-Linux-x86_64
    dest: "{{ docker_compose_path }}"
    mode: 0755
...
