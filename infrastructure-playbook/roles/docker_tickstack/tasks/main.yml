---
# tasks file for docker_tickstack
- name: Synchronization of src on the control machine to dest on the remote hosts
  synchronize:
    src: /Users/samuel/Desktop/influxdata
    dest: /home/thomas_s/influxdata/
  when: ansible_host == '172.16.226.14'

# - name: Copy content dockerfile influxdata_1
#   copy:
#     src: ../files/docker-compose.yml
#     dest: /home/thomas_s/influxdata/
#     owner: thomas_s
#     group: thomas_s
#     mode: 0644
#   when: ansible_host == '172.16.226.14'
#
# - name: Copy content dockerfile influxdata_2
#   copy:
#     src: ../files/etc
#     dest: /home/thomas_s/influxdata/
#     owner: thomas_s
#     group: thomas_s
#     mode: 0644
#   when: ansible_host == '172.16.226.14'

# - name: Execute maj docker_compose
#   shell: "cd /home/thomas_s/influxdata/; docker-compose up -d"
#   when: ansible_host == '172.16.226.14'


# - name: Tag chronograf to point to registry
#   shell: 'docker tag chronograf:1.0.0-rc1 localhost:5000/chronograf'
#   when: ansible_host == '172.16.226.14'
#
# - name: push chronograf to registry
#   shell: 'docker push localhost:5000/chronograf'
#   when: ansible_host == '172.16.226.14'


- name: Install pip
  apt:
    name: python-pip
    state: present
  when: ansible_host == '172.16.226.14'

# - name: installing docker-py via pip
#   become: yes
#   become_user: root
#   with_items:
#     - docker
#   pip:
#     name: '{{ item }}'
#     state: present


- name: Image Chronograf
  docker_image:
     path: /home/thomas_s/influxdata/influxdata/chronograf
     state: present
     name: chronograf
  become: yes

- name: Tag and push to local registry
  docker_image:
     name: chronograf
     repository: localhost:5000/chronograf
     push: yes
  become: yes
